name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18, 20, 22 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build

      - name: Upload build artifacts
        if: matrix.node-version == 20
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/
          retention-days: 1

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18, 20, 22 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build

      - name: Run tests
        run: npm test

  examples:
    name: Test Examples
    runs-on: ubuntu-latest
    needs: [ build ]
    strategy:
      matrix:
        example: [ esm, commonjs, image-processing ]
        node-version: [ 20 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Build library
        run: npm run build

      - name: Pack library
        run: npm pack

      - name: Install example dependencies
        working-directory: examples/${{ matrix.example }}
        run: npm ci

      - name: Install local library in example
        working-directory: examples/${{ matrix.example }}
        run: npm install ../../nestjs-piscina-*.tgz

      - name: Build example (TypeScript)
        working-directory: examples/${{ matrix.example }}
        run: npm run build
        continue-on-error: false

      - name: Test example in dev mode
        working-directory: examples/${{ matrix.example }}
        run: timeout 10s npm run dev || [ $? -eq 124 ]

      - name: Test example in production mode
        working-directory: examples/${{ matrix.example }}
        run: timeout 10s npm run start || [ $? -eq 124 ]

  status-check:
    name: CI Status Check
    runs-on: ubuntu-latest
    needs: [ lint, build, test, examples ]
    if: always()
    steps:
      - name: Check job results
        run: |
          if [ "${{ needs.lint.result }}" != "success" ] || \
             [ "${{ needs.build.result }}" != "success" ] || \
             [ "${{ needs.test.result }}" != "success" ] || \
             [ "${{ needs.examples.result }}" != "success" ]; then
            echo "One or more CI jobs failed"
            exit 1
          fi
          echo "All CI jobs passed successfully"
